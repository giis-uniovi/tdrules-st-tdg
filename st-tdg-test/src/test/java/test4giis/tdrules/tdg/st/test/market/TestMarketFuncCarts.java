package test4giis.tdrules.tdg.st.test.market;

import org.junit.Test;

import giis.tdrules.store.loader.DataLoader;
import giis.tdrules.store.loader.gen.IAttrGen;

/**
 * Carts Functionality Tests.
 * - Use the live SUT where the uids of each generated object are generated by the backend.
 * - Use the dictionary
 * - Include Users, Carts and Orders
 */
public class TestMarketFuncCarts extends BaseMarket {
	
	@Override
	protected boolean isLiveBackend() {
		return true;
	}
	
	@Test
	public void testUsersByName() {
		// users by name
		String query = "tds UserDTOReq where name='Pepe'";
		IAttrGen dict=getDictionaryAttrGen();
		DataLoader dg = getLiveDataLoader().setAttrGen(dict);
		generateAndLoad(dg, query, dict);
		assertData("func-UsersByName.txt", dg);
	}

	@Test
	public void testUsersByEmail() {
		// user by email
		String query = "tds UserDTOReq where email ='pepe@email.com'";
		IAttrGen dict=getDictionaryAttrGen();
		DataLoader dg = getLiveDataLoader().setAttrGen(dict);
		generateAndLoad(dg, query, dict);
		assertData("func-UsersByEmail.txt", dg);
	}
				
	@Test
	public void testEmptyCartsByUser() {
		// empty cart of an user
		String query = "tds CartDTO where user='lucia@email.com'";
		IAttrGen dict=getDictionaryAttrGen();
		DataLoader dg = getLiveDataLoader().setAttrGen(dict);
		generateAndLoad(dg, query, dict);
		assertData("func-EmptyCartsByUser.txt", dg);
	}
	
	@Test
	public void testCartsProductAvailable() {
		// carts with items (products added) of an user, products must be available
		String query = "tds CartDTO,CartItemDTORes,ProductDTORes where ProductDTORes.available=1";
		IAttrGen dict=getDictionaryAttrGen();
		DataLoader dg = getLiveDataLoader().setAttrGen(dict);
		generateAndLoad(dg, query, dict);
		assertData("func-CartsProductAvailable.txt", dg);
	}
	
	@Test
	public void testCartsByUserProductQuantityAvailable() {
		// carts with items (products added) of an user, products must be available, quantity 5
		String query = "tds CartDTO,CartItemDTORes,ProductDTORes where CartDTO.user='pepe@email.com' and CartItemDTORes.quantity=5 and ProductDTORes.available=1";
		IAttrGen dict=getDictionaryAttrGen();
		DataLoader dg = getLiveDataLoader().setAttrGen(dict);
		generateAndLoad(dg, query, dict);
		assertData("func-CartsByUserProductQuantityAvailable.txt", dg);
	}
}
