package test4giis.tdrules.tdg.st.test.market;

import org.junit.Test;

import giis.tdrules.store.loader.DataLoader;
import giis.tdrules.store.loader.gen.IAttrGen;

/**
 * Orders Functionality Tests.
 * - Use the live SUT where the uids of each generated object are generated by the backend.
 * - Use the dictionary
 * - Include Orders and ordered products
 */
public class TestMarketFuncOrders extends BaseMarket {
	
	@Override
	protected boolean isLiveBackend() {
		return true;
	}
	
	@Test
	public void testOrdersByUser() {
		String query = "tds OrderDTORes,OrderedProductDTORes,ProductDTORes where userAccount='pepe@email.com' and OrderedProductDTORes.productId=1 and ProductDTORes.available=1";
		IAttrGen dict=getDictionaryAttrGen();
		DataLoader dg = getLiveDataLoader().setAttrGen(dict);
		generateAndLoad(dg, query, dict);
		assertData("func-OrdersByUser.txt", dg);
	}
	
	@Test
	public void testOrdersExecuted() {
		String query = "tds OrderDTORes,OrderedProductDTORes where OrderDTORes.executed=1";
		IAttrGen dict=getDictionaryAttrGen();
		DataLoader dg = getLiveDataLoader().setAttrGen(dict);
		generateAndLoad(dg, query, dict);
		assertData("func-OrdersExecuted.txt", dg);
	}
	
	@Test
	public void testOrdersDeliveryIncluded() {
		String query = "tds OrderDTORes,OrderedProductDTORes where OrderDTORes.deliveryIncluded=1";
		IAttrGen dict=getDictionaryAttrGen();
		DataLoader dg = getLiveDataLoader().setAttrGen(dict);
		generateAndLoad(dg, query, dict);
		assertData("func-OrdersDeliveryInc.txt", dg);
	}
	
	@Test
	public void testOrdersGroupbyProducts() {
		String query = "tds OrderDTORes,OrderedProductDTORes group by OrderedProductDTORes.productId";
		IAttrGen dict=getDictionaryAttrGen();
		DataLoader dg = getLiveDataLoader().setAttrGen(dict);
		generateAndLoad(dg, query, dict);
		assertData("func-OrdersGroupbyProducts.txt", dg);
	}
	
	@Test
	public void testOrdersGroupbyDistillery() {
		String query = "tds OrderDTORes,OrderedProductDTORes,ProductDTORes group by ProductDTORes.distillery";
		IAttrGen dict=getDictionaryAttrGen();
		DataLoader dg = getLiveDataLoader().setAttrGen(dict);
		generateAndLoad(dg, query, dict);
		assertData("func-OrdersGroupbyDistillery.txt", dg);
	}
}
