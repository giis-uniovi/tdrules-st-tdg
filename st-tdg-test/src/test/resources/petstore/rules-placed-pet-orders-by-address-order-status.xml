<?xml version="1.0" encoding="UTF-8"?>
<sqlfpc>
<version>0.0.0<development/></version>
<sql>tds Customer, "Order", Pet where Customer.address[]::zip='99999' and "Order".status='placed'</sql>
<parsedsql>SELECT *
   FROM Customer
     LEFT JOIN Customer_address_xa ON Customer.id = Customer_address_xa.fk_xa
     INNER JOIN "Order" ON Customer.id = "Order".customerId
     INNER JOIN Pet ON "Order".petId = Pet.id
     LEFT JOIN Pet_tags_xa ON Pet.id = Pet_tags_xa.fk_xa
     LEFT JOIN Pet_photoUrls_xa ON Pet.id = Pet_photoUrls_xa.fk_xa
     LEFT JOIN Category Pet_category_xref ON Pet.category::id = Pet_category_xref.id
   WHERE Customer_address_xa.zip = '99999' AND "Order".status = 'placed'</parsedsql>
<fpcrules>
  <fpcrule><id>1</id><category>S</category><type>T</type><subtype>TT</subtype><location>1.w.1.[Customer_address_xa.zip = '99999']</location>
    <sql>SELECT *
   FROM Customer
     INNER JOIN Customer_address_xa ON Customer.id = Customer_address_xa.fk_xa
     INNER JOIN "Order" ON Customer.id = "Order".customerId
     INNER JOIN Pet ON "Order".petId = Pet.id
     INNER JOIN Pet_tags_xa ON Pet.id = Pet_tags_xa.fk_xa
     INNER JOIN Pet_photoUrls_xa ON Pet.id = Pet_photoUrls_xa.fk_xa
     INNER JOIN Category Pet_category_xref ON Pet.category::id = Pet_category_xref.id
   WHERE (Customer_address_xa.zip = '99999') AND ("Order".status = 'placed')</sql>
    <description>--A set of joined tables such that:
--The WHERE condition fulfills:
  --(T) Customer_address_xa.zip = '99999' is TRUE
  --(T) "Order".status = 'placed' is TRUE</description>
  </fpcrule>
  <fpcrule><id>2</id><category>S</category><type>T</type><subtype>FT</subtype><location>1.w.1.[Customer_address_xa.zip = '99999']</location>
    <sql>SELECT *
   FROM Customer
     INNER JOIN Customer_address_xa ON Customer.id = Customer_address_xa.fk_xa
     INNER JOIN "Order" ON Customer.id = "Order".customerId
     INNER JOIN Pet ON "Order".petId = Pet.id
     INNER JOIN Pet_tags_xa ON Pet.id = Pet_tags_xa.fk_xa
     INNER JOIN Pet_photoUrls_xa ON Pet.id = Pet_photoUrls_xa.fk_xa
     INNER JOIN Category Pet_category_xref ON Pet.category::id = Pet_category_xref.id
   WHERE NOT(Customer_address_xa.zip = '99999') AND ("Order".status = 'placed')</sql>
    <description>--A set of joined tables such that:
--The WHERE condition fulfills:
  --(F) Customer_address_xa.zip = '99999' is FALSE
  --(T) "Order".status = 'placed' is TRUE</description>
  </fpcrule>
  <fpcrule><id>3</id><category>S</category><type>T</type><subtype>FT</subtype><location>1.w.2.["Order".status = 'placed']</location>
    <sql>SELECT *
   FROM Customer
     INNER JOIN Customer_address_xa ON Customer.id = Customer_address_xa.fk_xa
     INNER JOIN "Order" ON Customer.id = "Order".customerId
     INNER JOIN Pet ON "Order".petId = Pet.id
     INNER JOIN Pet_tags_xa ON Pet.id = Pet_tags_xa.fk_xa
     INNER JOIN Pet_photoUrls_xa ON Pet.id = Pet_photoUrls_xa.fk_xa
     INNER JOIN Category Pet_category_xref ON Pet.category::id = Pet_category_xref.id
   WHERE NOT("Order".status = 'placed') AND (Customer_address_xa.zip = '99999')</sql>
    <description>--A set of joined tables such that:
--The WHERE condition fulfills:
  --(F) "Order".status = 'placed' is FALSE
  --(T) Customer_address_xa.zip = '99999' is TRUE</description>
  </fpcrule>
  <fpcrule><id>4</id><category>J</category><type>L</type><subtype>O</subtype><location>1.j.1.[LEFT JOIN]</location>
    <sql>SELECT *
   FROM Customer
     LEFT JOIN Customer_address_xa ON Customer.id = Customer_address_xa.fk_xa
     INNER JOIN "Order" ON Customer.id = "Order".customerId
     INNER JOIN Pet ON "Order".petId = Pet.id
     INNER JOIN Pet_tags_xa ON Pet.id = Pet_tags_xa.fk_xa
     INNER JOIN Pet_photoUrls_xa ON Pet.id = Pet_photoUrls_xa.fk_xa
     INNER JOIN Category Pet_category_xref ON Pet.category::id = Pet_category_xref.id
   WHERE ((Customer_address_xa.fk_xa IS NULL) AND (Customer.id IS NOT NULL))
     AND ("Order".status = 'placed')</sql>
    <description>
--The JOIN tables fulfill:
--COMMENT: Reduced conditions: [Customer_address_xa.zip = '99999'] ; 
  --summary: [Customer] left [Customer_address_xa] ON Customer.id = Customer_address_xa.fk_xa
  --There exist a set of rows joined from tables Customer, Order, Pet, Pet_tags_xa, Pet_photoUrls_xa, Category Pet_category_xref
  --which does not join to any table in Customer_address_xa
--The following condition in the WHERE holds:
  --WHERE "Order".status = 'placed'</description>
  </fpcrule>
  <fpcrule><id>5</id><category>J</category><type>L</type><subtype>O</subtype><location>1.j.2.[INNER JOIN]</location>
    <sql>SELECT *
   FROM Customer
     INNER JOIN Customer_address_xa ON Customer.id = Customer_address_xa.fk_xa
     LEFT JOIN "Order" ON Customer.id = "Order".customerId
     LEFT JOIN Pet ON "Order".petId = Pet.id
     LEFT JOIN Pet_tags_xa ON Pet.id = Pet_tags_xa.fk_xa
     LEFT JOIN Pet_photoUrls_xa ON Pet.id = Pet_photoUrls_xa.fk_xa
     LEFT JOIN Category Pet_category_xref ON Pet.category::id = Pet_category_xref.id
   WHERE (("Order".customerId IS NULL) AND (Customer.id IS NOT NULL))
     AND (Customer_address_xa.zip = '99999')</sql>
    <description>
--The JOIN tables fulfill:
--COMMENT: Reduced conditions: ["Order".status = 'placed'] ; 
  --summary: [Customer] left [Order] ON Customer.id = "Order".customerId
  --There exist a set of rows joined from tables Customer, Customer_address_xa
  --which does not join to any table in Order
--The following condition in the WHERE holds:
  --WHERE Customer_address_xa.zip = '99999'</description>
  </fpcrule>
  <fpcrule><id>6</id><category>J</category><type>R</type><subtype>O</subtype><location>1.j.3.[INNER JOIN]</location>
    <sql>SELECT *
   FROM Customer
     LEFT JOIN Customer_address_xa ON Customer.id = Customer_address_xa.fk_xa
     RIGHT JOIN "Order" ON Customer.id = "Order".customerId
     RIGHT JOIN Pet ON "Order".petId = Pet.id
     INNER JOIN Pet_tags_xa ON Pet.id = Pet_tags_xa.fk_xa
     INNER JOIN Pet_photoUrls_xa ON Pet.id = Pet_photoUrls_xa.fk_xa
     INNER JOIN Category Pet_category_xref ON Pet.category::id = Pet_category_xref.id
   WHERE ("Order".petId IS NULL) AND (Pet.id IS NOT NULL)</sql>
    <description>
--The JOIN tables fulfill:
--COMMENT: Reduced conditions: [Customer_address_xa.zip = '99999'] ; ["Order".status = 'placed'] ; 
  --summary: [Order] right [Pet] ON "Order".petId = Pet.id
  --There exist a set of rows joined from tables Pet, Pet_tags_xa, Pet_photoUrls_xa, Category Pet_category_xref
  --which does not join to any table in Order</description>
  </fpcrule>
  <fpcrule><id>7</id><category>J</category><type>L</type><subtype>O</subtype><location>1.j.4.[LEFT JOIN]</location>
    <sql>SELECT *
   FROM Customer
     INNER JOIN Customer_address_xa ON Customer.id = Customer_address_xa.fk_xa
     INNER JOIN "Order" ON Customer.id = "Order".customerId
     INNER JOIN Pet ON "Order".petId = Pet.id
     LEFT JOIN Pet_tags_xa ON Pet.id = Pet_tags_xa.fk_xa
     INNER JOIN Pet_photoUrls_xa ON Pet.id = Pet_photoUrls_xa.fk_xa
     INNER JOIN Category Pet_category_xref ON Pet.category::id = Pet_category_xref.id
   WHERE ((Pet_tags_xa.fk_xa IS NULL) AND (Pet.id IS NOT NULL))
     AND (Customer_address_xa.zip = '99999' AND "Order".status = 'placed')</sql>
    <description>
--The JOIN tables fulfill:
  --summary: [Pet] left [Pet_tags_xa] ON Pet.id = Pet_tags_xa.fk_xa
  --There exist a set of rows joined from tables Customer, Customer_address_xa, Order, Pet, Pet_photoUrls_xa, Category Pet_category_xref
  --which does not join to any table in Pet_tags_xa
--The WHERE condition is TRUE.</description>
  </fpcrule>
  <fpcrule><id>8</id><category>J</category><type>L</type><subtype>O</subtype><location>1.j.5.[LEFT JOIN]</location>
    <sql>SELECT *
   FROM Customer
     INNER JOIN Customer_address_xa ON Customer.id = Customer_address_xa.fk_xa
     INNER JOIN "Order" ON Customer.id = "Order".customerId
     INNER JOIN Pet ON "Order".petId = Pet.id
     INNER JOIN Pet_tags_xa ON Pet.id = Pet_tags_xa.fk_xa
     LEFT JOIN Pet_photoUrls_xa ON Pet.id = Pet_photoUrls_xa.fk_xa
     INNER JOIN Category Pet_category_xref ON Pet.category::id = Pet_category_xref.id
   WHERE ((Pet_photoUrls_xa.fk_xa IS NULL) AND (Pet.id IS NOT NULL))
     AND (Customer_address_xa.zip = '99999' AND "Order".status = 'placed')</sql>
    <description>
--The JOIN tables fulfill:
  --summary: [Pet] left [Pet_photoUrls_xa] ON Pet.id = Pet_photoUrls_xa.fk_xa
  --There exist a set of rows joined from tables Customer, Customer_address_xa, Order, Pet, Pet_tags_xa, Category Pet_category_xref
  --which does not join to any table in Pet_photoUrls_xa
--The WHERE condition is TRUE.</description>
  </fpcrule>
  <fpcrule><id>9</id><category>J</category><type>R</type><subtype>O</subtype><location>1.j.6.[LEFT JOIN]</location>
    <sql>SELECT *
   FROM Customer
     LEFT JOIN Customer_address_xa ON Customer.id = Customer_address_xa.fk_xa
     RIGHT JOIN "Order" ON Customer.id = "Order".customerId
     RIGHT JOIN Pet ON "Order".petId = Pet.id
     LEFT JOIN Pet_tags_xa ON Pet.id = Pet_tags_xa.fk_xa
     LEFT JOIN Pet_photoUrls_xa ON Pet.id = Pet_photoUrls_xa.fk_xa
     RIGHT JOIN Category Pet_category_xref ON Pet.category::id = Pet_category_xref.id
   WHERE (Pet.category::id IS NULL) AND (Pet_category_xref.id IS NOT NULL)</sql>
    <description>
--The JOIN tables fulfill:
--COMMENT: Reduced conditions: [Customer_address_xa.zip = '99999'] ; ["Order".status = 'placed'] ; 
  --summary: [Pet] right [Category Pet_category_xref] ON Pet.category::id = Pet_category_xref.id
  --There exist some row in table Category Pet_category_xref
  --which does not join to any table in Pet</description>
  </fpcrule>
</fpcrules>
</sqlfpc>